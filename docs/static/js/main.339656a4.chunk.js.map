{"version":3,"sources":["react-tinder-card/index.js","App.js","serviceWorker.js","index.js"],"names":["React","require","sleep","settings","getElementSize","element","elementStyles","window","getComputedStyle","widthString","getPropertyValue","width","Number","split","heightString","x","y","pythagoras","Math","sqrt","pow","animateOut","speed","a","startPos","getTranslate","bodySize","document","body","diagonal","velocity","time","multiplier","translateString","translationString","rotateString","rotationString","getRotation","style","transition","transform","animateBack","startingPoint","translation","rotation","setTimeout","getSwipeDirection","abs","calcSpeed","oldLocation","newLocation","dx","dy","dt","rot","matrix","WebKitCSSMatrix","webkitTransform","m41","m42","asin","m21","PI","dragableTouchmove","coordinates","offset","lastLocation","pos","Date","getTime","rotCalc","touchCoordinatesFromEvent","e","touchLocation","targetTouches","clientX","clientY","mouseCoordinatesFromEvent","swipeAlreadyReleased","TinderCard","flickOnSwipe","children","onSwipe","onCardLeftScreen","className","handleSwipeReleased","display","handleSwipeStart","ref","useCallback","mouseIsClicked","addEventListener","ev","preventDefault","createElement","db","name","url","App","characters","useState","lastDirection","setLastDirection","href","rel","map","character","key","dir","direction","nameToDelete","console","log","backgroundImage","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"0QAEMA,EAAQC,EAAQ,GAChBC,EAAQD,EAAQ,IAEhBE,EACc,IADdA,EAEK,EAFLA,EAGS,GAHTA,EAIY,IAGZC,EAAiB,SAACC,GACtB,IAAMC,EAAgBC,OAAOC,iBAAiBH,GACxCI,EAAcH,EAAcI,iBAAiB,SAC7CC,EAAQC,OAAOH,EAAYI,MAAM,MAAM,IACvCC,EAAeR,EAAcI,iBAAiB,UAEpD,MAAO,CAAEK,EAAGJ,EAAOK,EADJJ,OAAOE,EAAaD,MAAM,MAAM,MAI3CI,EAAa,SAACF,EAAGC,GACrB,OAAOE,KAAKC,KAAKD,KAAKE,IAAIL,EAAG,GAAKG,KAAKE,IAAIJ,EAAG,KAG1CK,EAAU,uCAAG,WAAOhB,EAASiB,GAAhB,6BAAAC,EAAA,6DACXC,EAAWC,EAAapB,GACxBqB,EAAWtB,EAAeuB,SAASC,MACnCC,EAAWZ,EAAWS,EAASX,EAAGW,EAASV,GAE3Cc,EAAWb,EAAWK,EAAMP,EAAGO,EAAMN,GACrCe,EAAOF,EAAWC,EAClBE,EAAaH,EAAWC,EAExBG,EAAkBC,EAAkBZ,EAAMP,EAAIiB,EAAaR,EAAST,GAAIO,EAAMN,EAAIgB,EAAaR,EAASR,GACxGmB,EAAeC,EAAeC,EAAYhC,IAEhDA,EAAQiC,MAAMC,WAAa,YAAcR,EAAO,IAChD1B,EAAQiC,MAAME,UAAYP,EAAkBE,EAb3B,UAeXjC,EAAa,IAAP6B,GAfK,4CAAH,wDAkBVU,EAAc,SAACpC,GACnBA,EAAQiC,MAAMC,WAAapC,EAA4B,KACvD,IAAMuC,EAAgBjB,EAAapB,GAC7BsC,EAAcT,EAAkBQ,EAAc3B,GAAKZ,EAAsBuC,EAAc1B,GAAKb,GAC5FyC,EAAWR,EAAeC,EAAYhC,IAAYF,GACxDE,EAAQiC,MAAME,UAAYG,EAAcC,EAExCC,YAAW,WACTxC,EAAQiC,MAAME,UAAY,SACG,IAA5BrC,GAEH0C,YAAW,WACTxC,EAAQiC,MAAMC,WAAa,SAC1BpC,IAGC2C,EAAoB,SAACxB,GACzB,OAAIJ,KAAK6B,IAAIzB,EAAMP,GAAKG,KAAK6B,IAAIzB,EAAMN,GAC7BM,EAAMP,EAAI,EAAK,QAAU,OAEzBO,EAAMN,EAAI,EAAK,KAAO,QAI5BgC,EAAY,SAACC,EAAaC,GAC9B,IAAMC,EAAKD,EAAYnC,EAAIkC,EAAYlC,EACjCqC,EAAKH,EAAYjC,EAAIkC,EAAYlC,EACjCqC,GAAMH,EAAYnB,KAAOkB,EAAYlB,MAAQ,IACnD,MAAO,CAAEhB,EAAGoC,EAAKE,EAAIrC,EAAGoC,EAAKC,IAGzBnB,EAAoB,SAACnB,EAAGC,GAE5B,MADoB,aAAeD,EAAI,OAASC,EAAI,OAIhDoB,EAAiB,SAACkB,GAEtB,MADiB,UAAYA,EAAM,QAI/B7B,EAAe,SAACpB,GACpB,IAAMiC,EAAQ/B,OAAOC,iBAAiBH,GAChCkD,EAAS,IAAIC,gBAAgBlB,EAAMmB,iBAEzC,MADY,CAAE1C,EAAGwC,EAAOG,IAAK1C,EAAGuC,EAAOI,MAInCtB,EAAc,SAAChC,GACnB,IAAMiC,EAAQ/B,OAAOC,iBAAiBH,GAChCkD,EAAS,IAAIC,gBAAgBlB,EAAMmB,iBAEzC,OADavC,KAAK0C,KAAKL,EAAOM,MAAQ,EAAI3C,KAAK4C,IAAM,KAIjDC,EAAoB,SAACC,EAAa3D,EAAS4D,EAAQC,GACvD,IAAMC,EAAM,CAAEpD,EAAGiD,EAAYjD,EAAIkD,EAAOlD,EAAGC,EAAGgD,EAAYhD,EAAIiD,EAAOjD,GAC/DkC,EAAc,CAAEnC,EAAGoD,EAAIpD,EAAGC,EAAGmD,EAAInD,EAAGe,MAAM,IAAIqC,MAAOC,WACrD1B,EAAcT,EAAkBiC,EAAIpD,EAAGoD,EAAInD,GAC3CsD,EAAUtB,EAAUkB,EAAchB,GAAanC,EAAI,IACnD6B,EAAWR,EAAekC,EAAUnE,GAE1C,OADAE,EAAQiC,MAAME,UAAYG,EAAcC,EACjCM,GAGHqB,EAA4B,SAACC,GACjC,IAAMC,EAAgBD,EAAEE,cAAc,GACtC,MAAO,CAAE3D,EAAG0D,EAAcE,QAAS3D,EAAGyD,EAAcG,UAGhDC,EAA4B,SAACL,GACjC,MAAO,CAAEzD,EAAGyD,EAAEG,QAAS3D,EAAGwD,EAAEI,UAG1BE,GAAuB,EAyFZC,EAvFI,SAAC,GAA6E,IAAD,IAA1EC,oBAA0E,SAArDC,EAAqD,EAArDA,SAAUC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,iBAAkBC,EAAgB,EAAhBA,UACxEC,EAAmB,uCAAG,WAAOhF,EAASiB,GAAhB,SAAAC,EAAA,0DACtBuD,EADsB,oDAE1BA,GAAuB,IACnB5D,KAAK6B,IAAIzB,EAAMP,GAAKZ,EAA0Be,KAAK6B,IAAIzB,EAAMN,GAAKb,GAH5C,qBAIpB6E,EAJoB,wBAKtBE,EAAQpC,EAAkBxB,IALJ,SAMhBD,EAAWhB,EAASiB,GANJ,OAOtBjB,EAAQiC,MAAMgD,QAAU,OACxBH,IARsB,wBAUtB1C,EAAYpC,GACZ6E,EAAQpC,EAAkBxB,IAXJ,gCAcxBmB,EAAYpC,GAdY,4CAAH,wDAkBnBkF,EAAmB,WACvBT,GAAuB,GAGnBU,EAAMxF,EAAMyF,aAAY,SAACpF,GAC7B,GAAKA,EAAL,CACA,IAAI4D,EAAS,CAAElD,EAAG,KAAMC,EAAG,MACvBM,EAAQ,CAAEP,EAAG,EAAGC,EAAG,GACnBkD,EAAe,CAAEnD,EAAG,EAAGC,EAAG,EAAGe,MAAM,IAAIqC,MAAOC,WAC9CqB,GAAiB,EAErBrF,EAAQsF,iBAAkB,cAAe,SAACC,GACxCA,EAAGC,iBACHN,IACAtB,EAAS,CAAElD,GAAIwD,EAA0BqB,GAAI7E,EAAGC,GAAIuD,EAA0BqB,GAAI5E,MAGpFX,EAAQsF,iBAAkB,aAAc,SAACC,GACvCA,EAAGC,iBACHH,GAAiB,EACjBH,IACAtB,EAAS,CAAElD,GAAI8D,EAA0Be,GAAI7E,EAAGC,GAAI6D,EAA0Be,GAAI5E,MAGpFX,EAAQsF,iBAAkB,aAAc,SAACC,GACvCA,EAAGC,iBACH,IAAM3C,EAAca,EAAkBQ,EAA0BqB,GAAKvF,EAAS4D,EAAQC,GACtF5C,EAAQ0B,EAAUkB,EAAchB,GAChCgB,EAAehB,KAGjB7C,EAAQsF,iBAAkB,aAAc,SAACC,GAEvC,GADAA,EAAGC,iBACCH,EAAgB,CAClB,IAAMxC,EAAca,EAAkBc,EAA0Be,GAAKvF,EAAS4D,EAAQC,GACtF5C,EAAQ0B,EAAUkB,EAAchB,GAChCgB,EAAehB,MAInB7C,EAAQsF,iBAAkB,YAAa,SAACC,GACtCA,EAAGC,iBACHR,EAAoBhF,EAASiB,MAG/BjB,EAAQsF,iBAAkB,WAAY,SAACC,GACjCF,IACFE,EAAGC,iBACHH,GAAiB,EACjBL,EAAoBhF,EAASiB,OAIjCjB,EAAQsF,iBAAkB,cAAe,SAACC,GACpCF,IACFE,EAAGC,iBACHH,GAAiB,EACjBL,EAAoBhF,EAASiB,WAKnC,OACEtB,EAAM8F,cAAc,MAAO,CAAEN,MAAKJ,aAAaH,ICrM7Cc,EAAK,CACT,CACEC,KAAM,oBACNC,IAAK,qBAEP,CACED,KAAM,iBACNC,IAAK,oBAEP,CACED,KAAM,cACNC,IAAK,oBAEP,CACED,KAAM,aACNC,IAAK,mBAEP,CACED,KAAM,iBACNC,IAAK,qBAoCMC,MAhCf,WACE,IAAMC,EAAaJ,EADL,EAE4BK,qBAF5B,mBAEPC,EAFO,KAEQC,EAFR,KAad,OACE,6BACE,0BAAMC,KAAK,8DAA8DC,IAAI,eAC7E,0BAAMD,KAAK,8DAA8DC,IAAI,eAC7E,iDACA,yBAAKpB,UAAU,iBACZe,EAAWM,KAAI,SAACC,GAAD,OACd,kBAAC,EAAD,CAAYtB,UAAU,QAAQuB,IAAKD,EAAUV,KAAMd,QAAS,SAAC0B,GAAD,OAhBpDC,EAgBoED,EAhBzDE,EAgB8DJ,EAAUV,KAfjGe,QAAQC,IAAI,aAAeF,QAC3BR,EAAiBO,GAFJ,IAACA,EAAWC,GAgB+E3B,iBAAkB,kBAXxGa,EAWyHU,EAAUV,UAVrJe,QAAQC,IAAIhB,EAAO,qBADF,IAACA,IAYV,yBAAK1D,MAAO,CAAE2E,gBAAiB,OAASP,EAAUT,IAAM,KAAOb,UAAU,QACvE,4BAAKsB,EAAUV,YAKtBK,EAAgB,wBAAIjB,UAAU,YAAd,cAAqCiB,GAAsB,wBAAIjB,UAAU,eC1C5E8B,QACW,cAA7B3G,OAAO4G,SAASC,UAEe,UAA7B7G,OAAO4G,SAASC,UAEhB7G,OAAO4G,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAAS5F,SAAS6F,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.339656a4.chunk.js","sourcesContent":["/* global WebKitCSSMatrix */\n\nconst React = require('react')\nconst sleep = require('p-sleep')\n\nconst settings = {\n  snapBackDuration: 300,\n  maxTilt: 5,\n  bouncePower: 0.2,\n  swipeThreshold: 300 // px/s\n}\n\nconst getElementSize = (element) => {\n  const elementStyles = window.getComputedStyle(element)\n  const widthString = elementStyles.getPropertyValue('width')\n  const width = Number(widthString.split('px')[0])\n  const heightString = elementStyles.getPropertyValue('height')\n  const height = Number(heightString.split('px')[0])\n  return { x: width, y: height }\n}\n\nconst pythagoras = (x, y) => {\n  return Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2))\n}\n\nconst animateOut = async (element, speed) => {\n  const startPos = getTranslate(element)\n  const bodySize = getElementSize(document.body)\n  const diagonal = pythagoras(bodySize.x, bodySize.y)\n\n  const velocity = pythagoras(speed.x, speed.y)\n  const time = diagonal / velocity\n  const multiplier = diagonal / velocity\n\n  const translateString = translationString(speed.x * multiplier + startPos.x, -speed.y * multiplier + startPos.y)\n  const rotateString = rotationString(getRotation(element))\n\n  element.style.transition = 'ease-out ' + time + 's'\n  element.style.transform = translateString + rotateString\n\n  await sleep(time * 1000)\n}\n\nconst animateBack = (element) => {\n  element.style.transition = settings.snapBackDuration + 'ms'\n  const startingPoint = getTranslate(element)\n  const translation = translationString(startingPoint.x * -settings.bouncePower, startingPoint.y * -settings.bouncePower)\n  const rotation = rotationString(getRotation(element) * -settings.bouncePower)\n  element.style.transform = translation + rotation\n\n  setTimeout(() => {\n    element.style.transform = 'none'\n  }, settings.snapBackDuration * 0.75)\n\n  setTimeout(() => {\n    element.style.transition = '10ms'\n  }, settings.snapBackDuration)\n}\n\nconst getSwipeDirection = (speed) => {\n  if (Math.abs(speed.x) > Math.abs(speed.y)) {\n    return (speed.x > 0) ? 'right' : 'left'\n  } else {\n    return (speed.y > 0) ? 'up' : 'down'\n  }\n}\n\nconst calcSpeed = (oldLocation, newLocation) => {\n  const dx = newLocation.x - oldLocation.x\n  const dy = oldLocation.y - newLocation.y\n  const dt = (newLocation.time - oldLocation.time) / 1000\n  return { x: dx / dt, y: dy / dt }\n}\n\nconst translationString = (x, y) => {\n  const translation = 'translate(' + x + 'px, ' + y + 'px)'\n  return translation\n}\n\nconst rotationString = (rot) => {\n  const rotation = 'rotate(' + rot + 'deg)'\n  return rotation\n}\n\nconst getTranslate = (element) => {\n  const style = window.getComputedStyle(element)\n  const matrix = new WebKitCSSMatrix(style.webkitTransform)\n  const ans = { x: matrix.m41, y: matrix.m42 }\n  return ans\n}\n\nconst getRotation = (element) => {\n  const style = window.getComputedStyle(element)\n  const matrix = new WebKitCSSMatrix(style.webkitTransform)\n  const ans = -Math.asin(matrix.m21) / (2 * Math.PI) * 360\n  return ans\n}\n\nconst dragableTouchmove = (coordinates, element, offset, lastLocation) => {\n  const pos = { x: coordinates.x + offset.x, y: coordinates.y + offset.y }\n  const newLocation = { x: pos.x, y: pos.y, time: new Date().getTime() }\n  const translation = translationString(pos.x, pos.y)\n  const rotCalc = calcSpeed(lastLocation, newLocation).x / 1000\n  const rotation = rotationString(rotCalc * settings.maxTilt)\n  element.style.transform = translation + rotation\n  return newLocation\n}\n\nconst touchCoordinatesFromEvent = (e) => {\n  const touchLocation = e.targetTouches[0]\n  return { x: touchLocation.clientX, y: touchLocation.clientY }\n}\n\nconst mouseCoordinatesFromEvent = (e) => {\n  return { x: e.clientX, y: e.clientY }\n}\n\nlet swipeAlreadyReleased = false\n\nconst TinderCard = ({ flickOnSwipe = true, children, onSwipe, onCardLeftScreen, className }) => {\n  const handleSwipeReleased = async (element, speed) => {\n    if (swipeAlreadyReleased) { return }\n    swipeAlreadyReleased = true\n    if (Math.abs(speed.x) > settings.swipeThreshold | Math.abs(speed.y) > settings.swipeThreshold) { // Swipe recognized\n      if (flickOnSwipe) {\n        onSwipe(getSwipeDirection(speed))\n        await animateOut(element, speed)\n        element.style.display = 'none'\n        onCardLeftScreen()\n      } else {\n        animateBack(element)\n        onSwipe(getSwipeDirection(speed))\n      }\n    } else {\n      animateBack(element)\n    }\n  }\n\n  const handleSwipeStart = () => {\n    swipeAlreadyReleased = false\n  }\n\n  const ref = React.useCallback((element) => {\n    if (!element) { return } // necesarry?\n    let offset = { x: null, y: null }\n    let speed = { x: 0, y: 0 }\n    let lastLocation = { x: 0, y: 0, time: new Date().getTime() }\n    let mouseIsClicked = false\n\n    element.addEventListener(('touchstart'), (ev) => {\n      ev.preventDefault()\n      handleSwipeStart()\n      offset = { x: -touchCoordinatesFromEvent(ev).x, y: -touchCoordinatesFromEvent(ev).y }\n    })\n\n    element.addEventListener(('mousedown'), (ev) => {\n      ev.preventDefault()\n      mouseIsClicked = true\n      handleSwipeStart()\n      offset = { x: -mouseCoordinatesFromEvent(ev).x, y: -mouseCoordinatesFromEvent(ev).y }\n    })\n\n    element.addEventListener(('touchmove'), (ev) => {\n      ev.preventDefault()\n      const newLocation = dragableTouchmove(touchCoordinatesFromEvent(ev), element, offset, lastLocation)\n      speed = calcSpeed(lastLocation, newLocation)\n      lastLocation = newLocation\n    })\n\n    element.addEventListener(('mousemove'), (ev) => {\n      ev.preventDefault()\n      if (mouseIsClicked) {\n        const newLocation = dragableTouchmove(mouseCoordinatesFromEvent(ev), element, offset, lastLocation)\n        speed = calcSpeed(lastLocation, newLocation)\n        lastLocation = newLocation\n      }\n    })\n\n    element.addEventListener(('touchend'), (ev) => {\n      ev.preventDefault()\n      handleSwipeReleased(element, speed)\n    })\n\n    element.addEventListener(('mouseup'), (ev) => {\n      if (mouseIsClicked) {\n        ev.preventDefault()\n        mouseIsClicked = false\n        handleSwipeReleased(element, speed)\n      }\n    })\n\n    element.addEventListener(('mouseleave'), (ev) => {\n      if (mouseIsClicked) {\n        ev.preventDefault()\n        mouseIsClicked = false\n        handleSwipeReleased(element, speed)\n      }\n    })\n  })\n\n  return (\n    React.createElement('div', { ref, className }, children)\n  )\n}\n\n// module.exports = TinderCard\nexport default TinderCard\n","import React, { useState } from 'react'\nimport './App.css'\nimport TinderCard from './react-tinder-card/index'\n\nconst db = [\n  {\n    name: 'Richard Hendricks',\n    url: './img/richard.jpg'\n  },\n  {\n    name: 'Erlich Bachman',\n    url: './img/erlich.jpg'\n  },\n  {\n    name: 'Monica Hall',\n    url: './img/monica.jpg'\n  },\n  {\n    name: 'Jared Dunn',\n    url: './img/jared.jpg'\n  },\n  {\n    name: 'Dinesh Chugtai',\n    url: './img/dinesh.jpg'\n  }\n]\n\nfunction App () {\n  const characters = db\n  const [lastDirection, setLastDirection] = useState()\n\n  const swiped = (direction, nameToDelete) => {\n    console.log('removing: ' + nameToDelete)\n    setLastDirection(direction)\n  }\n\n  const outOfFrame = (name) => {\n    console.log(name + ' left the screen!')\n  }\n\n  return (\n    <div>\n      <link href='https://fonts.googleapis.com/css?family=Damion&display=swap' rel='stylesheet' />\n      <link href='https://fonts.googleapis.com/css?family=Alatsi&display=swap' rel='stylesheet' />\n      <h1>React Tinder Card</h1>\n      <div className='cardContainer'>\n        {characters.map((character) =>\n          <TinderCard className='swipe' key={character.name} onSwipe={(dir) => swiped(dir, character.name)} onCardLeftScreen={() => outOfFrame(character.name)}>\n            <div style={{ backgroundImage: 'url(' + character.url + ')' }} className='card'>\n              <h3>{character.name}</h3>\n            </div>\n          </TinderCard>\n        )}\n      </div>\n      {lastDirection ? <h2 className='infoText'>You swiped {lastDirection}</h2> : <h2 className='infoText' />}\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}